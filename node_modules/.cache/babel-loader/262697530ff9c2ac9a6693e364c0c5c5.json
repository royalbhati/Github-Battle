{"ast":null,"code":"import _classCallCheck from \"/home/royal/github-battle/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/royal/github-battle/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/royal/github-battle/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/royal/github-battle/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/royal/github-battle/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/royal/github-battle/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/royal/github-battle/src/components/Popular.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport fetchPopular from '../utils/api';\n\nfunction SelectLang(props) {\n  var languages = [\"All\", \"Javascript\", \"Python\", \"Ruby\", \"Java\"];\n  return React.createElement(\"ul\", {\n    className: \"languages\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, languages.map(function (elem) {\n    return React.createElement(\"li\", {\n      key: elem,\n      style: elem === props.selectlang ? {\n        color: '#d0021b'\n      } : null,\n      onClick: props.onSelect.bind(null, elem),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, elem);\n  }));\n}\n\nfunction RepoGrid(props) {\n  console.log(props);\n  return React.createElement(\"ul\", {\n    className: \"repo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, props.repos.map(function (repo, index) {\n    return React.createElement(\"li\", {\n      key: repo.name,\n      className: \"item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"#\", index + 1), React.createElement(\"ul\", {\n      className: \"space-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"avatar\",\n      src: repo.owner.avatar_url,\n      alt: 'Avatar for' + repo.owner.login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    })), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \" \", React.createElement(\"a\", {\n      href: repo.html_url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, repo.name)), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"@\", repo.owner.login), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, repo.stargazers_count, \" stars\")));\n  }));\n}\n\nSelectLang.propTypes = {\n  selectlang: PropTypes.string.isRequired,\n  onSelect: PropTypes.func.isRequired\n};\nexport var Popular =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Popular, _Component);\n\n  function Popular() {\n    var _this;\n\n    _classCallCheck(this, Popular);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Popular).call(this));\n    _this.state = {\n      selectedlang: \"All\",\n      repos: null\n    };\n    _this.updatedlang = _this.updatedlang.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Popular, [{\n    key: \"updatedlang\",\n    value: function updatedlang(lang) {\n      this.setState(function () {\n        return {\n          selectedlang: lang,\n          repos: null\n        };\n      });\n      fetchPopular(lang).then(function (repos) {\n        this.setState(function () {\n          return {\n            repos: repos\n          };\n        });\n      }.bind(this));\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.updatedlang(this.state.selectedlang);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(this.state.repos);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(SelectLang, {\n        selectlang: this.state.selectedlang,\n        onSelect: this.updatedlang,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }), !this.state.repos ? React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"Loading....\") : React.createElement(RepoGrid, {\n        repos: this.state.repos,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Popular;\n}(Component);\nexport default Popular;","map":{"version":3,"sources":["/home/royal/github-battle/src/components/Popular.js"],"names":["React","Component","PropTypes","fetchPopular","SelectLang","props","languages","map","elem","selectlang","color","onSelect","bind","RepoGrid","console","log","repos","repo","index","name","owner","avatar_url","login","html_url","stargazers_count","propTypes","string","isRequired","func","Popular","state","selectedlang","updatedlang","lang","setState","then"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\nimport fetchPopular from '../utils/api';\n\nfunction SelectLang(props) {\n    const languages = [\"All\", \"Javascript\", \"Python\", \"Ruby\", \"Java\"];\n    return (\n        <ul className=\"languages\">\n            {languages.map((elem) => {\n                return (\n\n                    <li key={elem}\n                        style={elem === props.selectlang ? { color: '#d0021b' } : null}\n                        onClick={props.onSelect.bind(null, elem)}\n                    >\n                        {elem}\n                    </li>\n                )\n            })}\n\n        </ul>\n    )\n}\n\n\n\nfunction RepoGrid(props){\n    console.log(props)\n    return(\n        <ul className=\"repo\">\n        {props.repos.map((repo,index)=>{\n            return(\n                <li key={repo.name} className=\"item\">\n                <div>#{index+1}</div>\n                <ul className='space-list'>\n                <li>\n                    <img className=\"avatar\"\n                    src={repo.owner.avatar_url}\n                    alt={'Avatar for'+repo.owner.login}\n                    >\n                    </img>\n                </li>\n                <li> <a href={repo.html_url}>{repo.name}</a></li>\n                <li>@{repo.owner.login}</li>\n                <li>{repo.stargazers_count} stars</li>\n\n                </ul>\n                </li>\n\n            )\n        })}\n\n        </ul>\n    )\n}\n\nSelectLang.propTypes = {\n    selectlang: PropTypes.string.isRequired,\n    onSelect: PropTypes.func.isRequired\n}\n\n\n\n\nexport class Popular extends Component {\n    constructor() {\n        super();\n        this.state = {\n            selectedlang: \"All\",\n            repos:null\n        }\n        this.updatedlang = this.updatedlang.bind(this);\n    }\n\n    updatedlang(lang) {\n        this.setState(function () {\n            return { selectedlang: lang,\n                     repos:null    }\n        });\n\n        fetchPopular(lang).then(function(repos){\n            this.setState(function(){\n                return{\n                repos:repos\n                }\n            })\n\n        }.bind(this))\n    }\n\n    componentDidMount(){\n        this.updatedlang(this.state.selectedlang);\n\n    }\n\n\n    render() {\n        console.log(this.state.repos);\n\n        return (\n            <div>\n                <SelectLang selectlang={this.state.selectedlang} onSelect={this.updatedlang}></SelectLang>\n               {!this.state.repos ?\n               <h1>Loading....</h1> :\n            <RepoGrid repos={this.state.repos}></RepoGrid>}\n            </div>\n        )\n    }\n}\n\nexport default Popular\n"]},"metadata":{},"sourceType":"module"}